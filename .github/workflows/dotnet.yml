# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master", "feature/*" ]
    paths-ignore:
      - '**.md'

jobs:
  BuildSolution:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Cache npm packages
      id: cache-npm
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json', '.nvmrc') }}
    - name: Cache nuget packages
      id: cache-nuget
      uses: actions/cache@v3
      with:
        path: |
         ~/.nuget/packages
         **/obj/*
        key: ${{ runner.os }}-nuget_obj-${{ hashFiles('**/*.csproj', 'global.json', 'Directory.Build.props') }}
    - name: Restore dependencies
      if: steps.cache-nuget.outputs.cache-hit != 'true'
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore -warnaserror -warnnotaserror:CS0618,CS0612
  MigrationsMsSqlEntityFrameworkCore:
    uses: ./.github/workflows/build_and_test.yml
    with:
      working-directory: ./Examples/Migrations.MsSql.EntityFrameworkCore/Migrations.MsSql.EntityFrameworkCore.Nunit
  ApiMsSqlNunit:
    uses: ./.github/workflows/build_and_test.yml
    with:
      working-directory: ./Examples/Api/MsSql/Api.MsSql.Nunit
  ApiMsSqlXunit:
    uses: ./.github/workflows/build_and_test.yml
    with:
      working-directory: ./Examples/Api/MsSql/Api.MsSql.Xunit
  ApiPostgreSqlNunit:
    uses: ./.github/workflows/build_and_test.yml
    with:
      working-directory: ./Examples/Api/PostgreSql/Api.PostgreSql.Nunit
  ApiPostgreSqlXunit:
    uses: ./.github/workflows/build_and_test.yml
    with:
      working-directory: ./Examples/Api/PostgreSql/Api.PostgreSql.Xunit
  ApiJwtAuthNunit:
    uses: ./.github/workflows/build_and_test.yml
    with:
      working-directory: ./Examples/ApiJwtAuth/ApiJwtAuth.Nunit
  RazorPlaywright:
    uses: ./.github/workflows/build_and_test.yml
    with:
      working-directory: ./Examples/Razor/Razor.Playwright
  VuePlaywright:
    uses: ./.github/workflows/build_and_test.yml
    with:
      setup-node: true
      working-directory: ./Examples/Vue/Vue.Playwright
  AngularAuthPlaywright:
    uses: ./.github/workflows/build_and_test.yml
    with:
      setup-node: true
      working-directory: ./Examples/AngularAuth/AngularAuth.Playwright
