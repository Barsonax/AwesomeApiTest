# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master", "feature/*" ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - '**.md'

jobs:
  BuildSolution:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -warnaserror -warnnotaserror:CS0618
    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: ./**/bin/*
  MigrationsMsSqlEntityFrameworkCore:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/Migrations.MsSql.EntityFrameworkCore/Migrations.MsSql.EntityFrameworkCore.Nunit
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -warnaserror
      - name: Test
        run: dotnet test --no-build --verbosity normal
  ApiMsSqlNunit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/Api/MsSql/Api.MsSql.Nunit
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal
  ApiMsSqlXunit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/Api/MsSql/Api.MsSql.Xunit
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal
  ApiPostgreSqlNunit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/Api/PostgreSql/Api.PostgreSql.Nunit
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal
  ApiPostgreSqlXunit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/Api/PostgreSql/Api.PostgreSql.Xunit
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal
  ApiJwtAuthNunit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/ApiJwtAuth/ApiJwtAuth.Nunit
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal
  RazorPlaywright:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/Razor/Razor.Playwright
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal
  VuePlaywright:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/Vue/Vue.Playwright
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal
  AngularAuthPlaywright:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Examples/AngularAuth/AngularAuth.Playwright
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -warnaserror
      - name: Test
        run: dotnet test --no-build --verbosity normal
